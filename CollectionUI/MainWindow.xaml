<Window x:Class="CollectionUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CollectionUI"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:tasksVM="clr-namespace:CollectionUI.ViewModel"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="500">
    <Window.DataContext>
        <tasksVM:VMTasksCollection/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="buttonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
        <local:BoolToBrushConverter x:Key="isCompletedToBrush"/>
        <local:BoolToBrushConverter x:Key="isOutDatedToBrush"  FalseColor="Green" TrueColor="Red"/>
        <local:CreateTaskConverter x:Key="createTask"/>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox Text="{Binding Path=SelectedDate, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding SaveTasksOnClose}"/>
        </i:EventTrigger>

    </i:Interaction.Triggers>
    <Grid>
        <TextBlock Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Liczba zadań: ">
            <Run Text="{Binding Path=TaskList.Count, Mode=OneWay}"/>
        </TextBlock>
        <ListBox x:Name="lbTaskList" Margin="10,35,10,200"
                     ItemsSource="{Binding Path=TaskList}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" Margin="3">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Description, Mode=OneWay}" FontSize="20"
                                      Foreground="{Binding IsCompleted, Converter={StaticResource  isCompletedToBrush}}" />
                            <Button Content="Zrealizowane" Command="{Binding MarkAsIsCompleted}" 
                                    Style="{StaticResource buttonStyle}"
                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneWay, Converter={StaticResource boolToVisibility}}"/>
                            <Button Content="Nie zrealizowane" Command="{Binding MarkAsIsNotCompleted}"
                                    Style="{StaticResource buttonStyle}"
                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Mode=OneWay, Converter={StaticResource boolToVisibility}}"/>
                        </StackPanel>
                        <TextBlock>
                            Termin: <Run Text="{Binding PlannedCompletionDate, Mode=OneWay, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL}"
                                         Foreground="{Binding IsCompleted, Mode=OneWay, Converter={StaticResource isOutDatedToBrush}}"/>
                            Utworzono: <Run Text="{Binding CreateDate, Mode=OneWay, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL}"/>

                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue"/>
                        </Trigger>
                    </Style.Triggers>

                </Style>

            </ListBox.ItemContainerStyle>
        </ListBox>
        <Button Content="Usuń zadanie"
                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="10,0,0,165" Width="100" Height="25"
                Style="{StaticResource buttonStyle}"
                Command="{Binding DeleteTask}"
                CommandParameter="{Binding ElementName=lbTaskList, Path=SelectedIndex}"/>
        <GroupBox Header="Nowe zadanie" Margin="10,0,10,10" MinWidth="420"
                  Height="140" VerticalAlignment="Bottom">
            <Grid>
                <Label Content="Opis:" Margin="10,5,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBox x:Name="tbDescription" Height="23"
                         Margin="10,30,10,0" VerticalAlignment="Top"/>
                <Label Content="Piorytet:" Margin="10,60,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <ComboBox x:Name="cbPriority" Margin="10,85,0,0" Width="120"
                          HorizontalAlignment="Left" VerticalAlignment="Top">
                    <ComboBoxItem>Mniej ważne</ComboBoxItem>
                    <ComboBoxItem>Ważne</ComboBoxItem>
                    <ComboBoxItem>Krytyczne</ComboBoxItem>
                </ComboBox>
                <Label Content="Termin realizacji:" Margin="160,60,0,0"
                       HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <DatePicker x:Name="dpCompletionDate" Margin="160,85,0,0"
                            HorizontalAlignment="Left" VerticalAlignment="Top"
                            SelectedDate="{x:Static s:DateTime.Now}"/>
                <Button Content="Dodaj zadanie" Margin="0,83,10,0"
                        HorizontalAlignment="Right" VerticalAlignment="Top"
                        Width="100" Height="25"
                        Style="{StaticResource buttonStyle}"
                        Command="{Binding AddTask}">
                    <Button.CommandParameter> <!--Zebranie parametrów do jednego obiketu który zostanie przekazny do komendy-->
                        <MultiBinding Converter="{StaticResource createTask}">
                            <Binding ElementName="tbDescription" Path="Text"/>
                            <Binding ElementName="dpCompletionDate" Path="SelectedDate"/>
                            <Binding ElementName="cbPriority" Path="SelectedIndex"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
